/*
 * Whisper API Platform
 *
 * Whisper provides comprehensive intelligence and monitoring capabilities for domains, IPs, and web infrastructure. Access powerful APIs for WHOIS data, DNS analysis, screenshot capture, network intelligence, and more - all through a unified, authenticated interface.  **Key Features:** • Domain intelligence and subdomain discovery • IP geolocation and network analysis • Real-time and historical WHOIS data • Automated website screenshot capture • Network relationship mapping • BGP routing and security intelligence • Infrastructure monitoring and health checks  **Authentication:** All endpoints require Bearer token authentication. Contact support for API access.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@whisper.security
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Noctis.FrontGraph.Sdk.Model;
using Noctis.FrontGraph.Sdk.Client;
using System.Reflection;

namespace Noctis.FrontGraph.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing DomainIntelligenceResponseSummary
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DomainIntelligenceResponseSummaryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DomainIntelligenceResponseSummary
        //private DomainIntelligenceResponseSummary instance;

        public DomainIntelligenceResponseSummaryTests()
        {
            // TODO uncomment below to create an instance of DomainIntelligenceResponseSummary
            //instance = new DomainIntelligenceResponseSummary();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DomainIntelligenceResponseSummary
        /// </summary>
        [Fact]
        public void DomainIntelligenceResponseSummaryInstanceTest()
        {
            // TODO uncomment below to test "IsType" DomainIntelligenceResponseSummary
            //Assert.IsType<DomainIntelligenceResponseSummary>(instance);
        }

        /// <summary>
        /// Test the property 'DomainName'
        /// </summary>
        [Fact]
        public void DomainNameTest()
        {
            // TODO unit test for the property 'DomainName'
        }

        /// <summary>
        /// Test the property 'Registrar'
        /// </summary>
        [Fact]
        public void RegistrarTest()
        {
            // TODO unit test for the property 'Registrar'
        }

        /// <summary>
        /// Test the property 'RegistrationDate'
        /// </summary>
        [Fact]
        public void RegistrationDateTest()
        {
            // TODO unit test for the property 'RegistrationDate'
        }

        /// <summary>
        /// Test the property 'ExpirationDate'
        /// </summary>
        [Fact]
        public void ExpirationDateTest()
        {
            // TODO unit test for the property 'ExpirationDate'
        }

        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }

        /// <summary>
        /// Test the property 'HasTrademark'
        /// </summary>
        [Fact]
        public void HasTrademarkTest()
        {
            // TODO unit test for the property 'HasTrademark'
        }

        /// <summary>
        /// Test the property 'DnsProvider'
        /// </summary>
        [Fact]
        public void DnsProviderTest()
        {
            // TODO unit test for the property 'DnsProvider'
        }

        /// <summary>
        /// Test the property 'TotalLinksIn'
        /// </summary>
        [Fact]
        public void TotalLinksInTest()
        {
            // TODO unit test for the property 'TotalLinksIn'
        }

        /// <summary>
        /// Test the property 'TotalLinksOut'
        /// </summary>
        [Fact]
        public void TotalLinksOutTest()
        {
            // TODO unit test for the property 'TotalLinksOut'
        }
    }
}
