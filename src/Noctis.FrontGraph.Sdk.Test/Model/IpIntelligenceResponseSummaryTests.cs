/*
 * Whisper API Platform
 *
 * Whisper provides comprehensive intelligence and monitoring capabilities for domains, IPs, and web infrastructure. Access powerful APIs for WHOIS data, DNS analysis, screenshot capture, network intelligence, and more - all through a unified, authenticated interface.  **Key Features:** • Domain intelligence and subdomain discovery • IP geolocation and network analysis • Real-time and historical WHOIS data • Automated website screenshot capture • Network relationship mapping • BGP routing and security intelligence • Infrastructure monitoring and health checks  **Authentication:** All endpoints require Bearer token authentication. Contact support for API access.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@whisper.security
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Noctis.FrontGraph.Sdk.Model;
using Noctis.FrontGraph.Sdk.Client;
using System.Reflection;

namespace Noctis.FrontGraph.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing IpIntelligenceResponseSummary
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IpIntelligenceResponseSummaryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IpIntelligenceResponseSummary
        //private IpIntelligenceResponseSummary instance;

        public IpIntelligenceResponseSummaryTests()
        {
            // TODO uncomment below to create an instance of IpIntelligenceResponseSummary
            //instance = new IpIntelligenceResponseSummary();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IpIntelligenceResponseSummary
        /// </summary>
        [Fact]
        public void IpIntelligenceResponseSummaryInstanceTest()
        {
            // TODO uncomment below to test "IsType" IpIntelligenceResponseSummary
            //Assert.IsType<IpIntelligenceResponseSummary>(instance);
        }

        /// <summary>
        /// Test the property 'Organization'
        /// </summary>
        [Fact]
        public void OrganizationTest()
        {
            // TODO unit test for the property 'Organization'
        }

        /// <summary>
        /// Test the property 'Location'
        /// </summary>
        [Fact]
        public void LocationTest()
        {
            // TODO unit test for the property 'Location'
        }

        /// <summary>
        /// Test the property 'Network'
        /// </summary>
        [Fact]
        public void NetworkTest()
        {
            // TODO unit test for the property 'Network'
        }

        /// <summary>
        /// Test the property 'AsnPrimary'
        /// </summary>
        [Fact]
        public void AsnPrimaryTest()
        {
            // TODO unit test for the property 'AsnPrimary'
        }

        /// <summary>
        /// Test the property 'RiskScore'
        /// </summary>
        [Fact]
        public void RiskScoreTest()
        {
            // TODO unit test for the property 'RiskScore'
        }

        /// <summary>
        /// Test the property 'IpType'
        /// </summary>
        [Fact]
        public void IpTypeTest()
        {
            // TODO unit test for the property 'IpType'
        }

        /// <summary>
        /// Test the property 'TotalDomains'
        /// </summary>
        [Fact]
        public void TotalDomainsTest()
        {
            // TODO unit test for the property 'TotalDomains'
        }

        /// <summary>
        /// Test the property 'TotalDnsRecords'
        /// </summary>
        [Fact]
        public void TotalDnsRecordsTest()
        {
            // TODO unit test for the property 'TotalDnsRecords'
        }
    }
}
