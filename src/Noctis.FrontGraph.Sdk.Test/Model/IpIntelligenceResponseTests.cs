/*
 * Whisper API Platform
 *
 * Whisper provides comprehensive intelligence and monitoring capabilities for domains, IPs, and web infrastructure. Access powerful APIs for WHOIS data, DNS analysis, screenshot capture, network intelligence, and more - all through a unified, authenticated interface.  **Key Features:** • Domain intelligence and subdomain discovery • IP geolocation and network analysis • Real-time and historical WHOIS data • Automated website screenshot capture • Network relationship mapping • BGP routing and security intelligence • Infrastructure monitoring and health checks  **Authentication:** All endpoints require Bearer token authentication. Contact support for API access.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@whisper.security
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Noctis.FrontGraph.Sdk.Model;
using Noctis.FrontGraph.Sdk.Client;
using System.Reflection;

namespace Noctis.FrontGraph.Sdk.Test.Model
{
    /// <summary>
    ///  Class for testing IpIntelligenceResponse
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class IpIntelligenceResponseTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for IpIntelligenceResponse
        //private IpIntelligenceResponse instance;

        public IpIntelligenceResponseTests()
        {
            // TODO uncomment below to create an instance of IpIntelligenceResponse
            //instance = new IpIntelligenceResponse();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of IpIntelligenceResponse
        /// </summary>
        [Fact]
        public void IpIntelligenceResponseInstanceTest()
        {
            // TODO uncomment below to test "IsType" IpIntelligenceResponse
            //Assert.IsType<IpIntelligenceResponse>(instance);
        }

        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }

        /// <summary>
        /// Test the property 'Summary'
        /// </summary>
        [Fact]
        public void SummaryTest()
        {
            // TODO unit test for the property 'Summary'
        }

        /// <summary>
        /// Test the property 'Geolocation'
        /// </summary>
        [Fact]
        public void GeolocationTest()
        {
            // TODO unit test for the property 'Geolocation'
        }

        /// <summary>
        /// Test the property 'Network'
        /// </summary>
        [Fact]
        public void NetworkTest()
        {
            // TODO unit test for the property 'Network'
        }

        /// <summary>
        /// Test the property 'Isp'
        /// </summary>
        [Fact]
        public void IspTest()
        {
            // TODO unit test for the property 'Isp'
        }

        /// <summary>
        /// Test the property 'Relationships'
        /// </summary>
        [Fact]
        public void RelationshipsTest()
        {
            // TODO unit test for the property 'Relationships'
        }

        /// <summary>
        /// Test the property 'Reputation'
        /// </summary>
        [Fact]
        public void ReputationTest()
        {
            // TODO unit test for the property 'Reputation'
        }

        /// <summary>
        /// Test the property 'Security'
        /// </summary>
        [Fact]
        public void SecurityTest()
        {
            // TODO unit test for the property 'Security'
        }

        /// <summary>
        /// Test the property 'Validation'
        /// </summary>
        [Fact]
        public void ValidationTest()
        {
            // TODO unit test for the property 'Validation'
        }

        /// <summary>
        /// Test the property 'History'
        /// </summary>
        [Fact]
        public void HistoryTest()
        {
            // TODO unit test for the property 'History'
        }

        /// <summary>
        /// Test the property 'AsnDetails'
        /// </summary>
        [Fact]
        public void AsnDetailsTest()
        {
            // TODO unit test for the property 'AsnDetails'
        }

        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Fact]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
    }
}
