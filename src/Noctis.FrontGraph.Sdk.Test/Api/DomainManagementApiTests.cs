/*
 * Whisper API Platform
 *
 * Whisper provides comprehensive intelligence and monitoring capabilities for domains, IPs, and web infrastructure. Access powerful APIs for WHOIS data, DNS analysis, screenshot capture, network intelligence, and more - all through a unified, authenticated interface.  **Key Features:** • Domain intelligence and subdomain discovery • IP geolocation and network analysis • Real-time and historical WHOIS data • Automated website screenshot capture • Network relationship mapping • BGP routing and security intelligence • Infrastructure monitoring and health checks  **Authentication:** All endpoints require Bearer token authentication. Contact support for API access.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api-support@whisper.security
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Noctis.FrontGraph.Sdk.Api;
using Noctis.FrontGraph.Sdk.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Noctis.FrontGraph.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing DomainManagementApi
    /// </summary>
    public sealed class DomainManagementApiTests : ApiTestsBase
    {
        private readonly IDomainManagementApi _instance;

        public DomainManagementApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IDomainManagementApi>();
        }

        /// <summary>
        /// Test FindSubdomains
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task FindSubdomainsAsyncTest()
        {
            string baseDomain = default!;
            Client.Option<int> limit = default!;
            Client.Option<string> level = default!;
            var response = await _instance.FindSubdomainsAsync(baseDomain, limit, level);
            var model = response.Ok();
            Assert.IsType<DomainerStringListResponse>(model);
        }
    }
}
